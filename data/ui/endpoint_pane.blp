/*
 * Copyright 2024 the Cartero authors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
// SPDX-License-Identifier: GPL-3.0-or-later
using Gtk 4.0;
using Adw 1;
using GtkSource 5;

template $CarteroEndpointPane: Adw.BreakpointBin {
  width-request: 400;
  height-request: 450;

  Adw.Breakpoint {
    condition ("max-width: 820sp")

    setters {
      paned.orientation: vertical;
      request_pane.width-request: -1;
      request_pane.height-request: 170;
      response_pane.width-request: -1;
      response_pane.height-request: 170;
    }
  }

  Box {
    orientation: vertical;

    Adw.Banner banner {
      styles [
        "error-banner"
      ]

      button-label: _("Close");
      button-clicked => $on_close_banner();
    }

    Box {
      orientation: vertical;

      Box {
        styles [
          "linked"
        ]

        margin-top: 6;
        margin-bottom: 6;
        margin-start: 6;
        margin-end: 6;
        orientation: horizontal;

        DropDown method {
          tooltip-text: _("Request method");
          model: verbs_string_list;
        }

        Entry url {
          hexpand: true;
          placeholder-text: _("Request URL");
          changed => $on_url_changed() swapped;
        }

        Button send {
          styles [
            "suggested-action"
          ]

          action-name: "win.request";
          label: _("Send");
          tooltip-text: _("Execute this HTTP request");
          sensitive: false;
        }
      }

      Separator {
        orientation: horizontal;
      }

      Paned paned {
        styles [
          "endpoint-pane"
        ]

        orientation: horizontal;
        shrink-start-child: false;
        shrink-end-child: false;
        resize-start-child: true;
        resize-end-child: true;
        position: 500;

        start-child: Box request_pane {
          styles [
            "request-pane"
          ]

          width-request: 500;

          Notebook {
            NotebookPage {
              tab: Label {
                label: _("Headers");
              };

              child: ScrolledWindow {
                hexpand: true;
                vexpand: true;

                Adw.Clamp {
                  maximum-size: 720;

                  $CarteroKeyValuePane header_pane {}
                }
              };
            }

            NotebookPage {
              tab: Label {
                label: _("Variables");
              };

              child: ScrolledWindow {
                hexpand: true;
                vexpand: true;

                Adw.Clamp {
                  maximum-size: 720;

                  $CarteroKeyValuePane variable_pane {}
                }
              };
            }

            NotebookPage {
              tab: Label {
                label: _("Body");
              };

              child: ScrolledWindow {
                hexpand: true;
                vexpand: true;

                GtkSource.View request_body {
                  auto-indent: true;
                  indent-width: 2;
                  show-line-numbers: true;
                  smart-backspace: true;
                  top-margin: 10;
                  bottom-margin: 10;
                  left-margin: 10;
                  right-margin: 10;
                  monospace: true;

                  buffer: GtkSource.Buffer {};
                }
              };
            }
          }
        };

        end-child: Box response_pane {
          styles [
            "response-pane"
          ]

          width-request: 300;

          $CarteroResponsePanel response {}
        };
      }
    }
  }
}

StringList verbs_string_list {
  strings [
    "GET",
    "POST",
    "PUT",
    "PATCH",
    "DELETE",
    "OPTIONS",
    "HEAD",
    "TRACE",
  ]
}
