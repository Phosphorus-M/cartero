/*
 * Copyright 2024 the Cartero authors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
// SPDX-License-Identifier: GPL-3.0-or-later
using Gtk 4.0;
using GtkSource 5;

template $CarteroWindow: ApplicationWindow {
  [titlebar]
  HeaderBar {
    [start]
    Box {
      spacing: 5;

      Button open_dialog {
        action-name: "win.open";
        tooltip-text: _("Open");

        [child]
        Box {
          spacing: 5;

          Image {
            icon-name: 'document-open-symbolic';
          }

          Label {
            label: _("Open");
          }
        }
      }

      Button save_dialog {
        action-name: "win.save";
        icon-name: 'document-save-symbolic';
        tooltip-text: _("Save");
      }
    }

    [title]
    Label {
      use-markup: true;
      label: "<b>Cartero</b>";
    }

    [end]
    MenuButton {
      icon-name: "open-menu-symbolic";
      primary: true;
      menu-model: main_menu;
    }
  }

  Box {
    orientation: vertical;

    Revealer revealer {
      reveal-child: false;
      transition-type: slide_down;
      transition-duration: 250;

      styles [
        "infobar-like"
      ]

      Box {
        orientation: horizontal;
        hexpand: true;
        margin-start: 10;
        margin-end: 10;
        margin-top: 3;
        margin-bottom: 3;
        spacing: 10;

        Label revealer_text {
          hexpand: true;
          halign: start;
          valign: center;
          wrap: true;
        }

        Button {
          label: _("Close");
          clicked => $on_close_revealer() swapped;
        }
      }
    }

    Box {
      orientation: vertical;
      margin-top: 6;
      margin-bottom: 6;
      margin-start: 6;
      margin-end: 6;
      spacing: 6;

      Box {
        orientation: horizontal;
        margin-start: 6;
        margin-end: 6;
        spacing: 6;

        DropDown method {
          tooltip-text: _("Request method");
          model: verbs_string_list;
        }

        Entry url {
          hexpand: true;
          placeholder-text: _("Request URL");
          changed => $on_url_changed() swapped;
        }

        Button send {
          action-name: "win.request";
          label: _("Send");
          tooltip-text: _("Execute this HTTP request");
          sensitive: false;
        }
      }

      FlowBox {
        orientation: horizontal;
        homogeneous: true;
        max-children-per-line: 2;
        min-children-per-line: 1;
        row-spacing: 6;
        column-spacing: 6;
        selection-mode: none;

        FlowBoxChild {
          focusable: false;

          Box {
            width-request: 480;
            height-request: 200;

            Notebook {
              NotebookPage {
                tab: Label {
                  label: _("Headers");
                };

                child: ScrolledWindow {
                  hexpand: true;
                  vexpand: true;

                  $CarteroKeyValuePane header_pane {}
                };
              }

              NotebookPage {
                tab: Label {
                  label: _("Body");
                };

                child: ScrolledWindow {
                  hexpand: true;
                  vexpand: true;

                  GtkSource.View request_body {
                    auto-indent: true;
                    indent-width: 2;
                    show-line-numbers: true;
                    smart-backspace: true;
                    top-margin: 10;
                    bottom-margin: 10;
                    left-margin: 10;
                    right-margin: 10;
                    monospace: true;

                    buffer: GtkSource.Buffer {};
                  }
                };
              }
            }
          }
        }

        FlowBoxChild {
          focusable: false;

          Box {
            width-request: 480;
            height-request: 200;

            $CarteroResponsePanel response {}
          }
        }
      }
    }
  }
}

StringList verbs_string_list {
  strings [
    "GET",
    "POST",
    "PUT",
    "PATCH",
    "DELETE",
    "OPTIONS"
  ]
}

menu main_menu {
  section {
    item {
      label: _("Wrap bodies");
      action: "win.body-wrap";
    }
  }
}
