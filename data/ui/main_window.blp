/*
 * Copyright 2024 the Cartero authors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
// SPDX-License-Identifier: GPL-3.0-or-later
using Gtk 4.0;
using GtkSource 5;

template $CarteroWindow: ApplicationWindow {
  [titlebar]
  HeaderBar {
    [start]
    MenuButton {
      label: _("Open");
      tooltip-text: _("UNDER CONSTRUCTION");
    }

    [title]
    Label {
      use-markup: true;
      label: "<b>Cartero</b>";
    }

    [end]
    MenuButton {
      icon-name: "open-menu-symbolic";
      tooltip-text: _("UNDER CONSTRUCTION");
      primary: true;
    }
  }

  Box {
    orientation: vertical;
    margin-top: 6;
    margin-bottom: 6;
    margin-start: 6;
    margin-end: 6;
    spacing: 6;

    Box {
      orientation: horizontal;
      margin-start: 6;
      margin-end: 6;
      spacing: 6;

      DropDown method {
        model: StringList {
          strings [
            "GET",
            "POST",
            "PUT",
            "PATCH",
            "DELETE",
            "OPTIONS"
          ]
        };
      }

      Entry url {
        hexpand: true;
        text: 'https://www.google.com';
      }

      Button send {
        clicked => $on_send_request() swapped;
        label: _("Send");
      }
    }

    FlowBox {
      orientation: horizontal;
      homogeneous: true;
      max-children-per-line: 2;
      min-children-per-line: 1;
      row-spacing: 6;
      column-spacing: 6;
      selection-mode: none;

      FlowBoxChild {
        focusable: false;

        Box {
          width-request: 480;
          height-request: 200;

          Notebook {
            NotebookPage {
              tab: Label {
                label: _("Headers");
              };

              child: ScrolledWindow {
                hexpand: true;
                vexpand: true;

                ListView request_headers {
                  factory: Gtk.BuilderListItemFactory {
                    template ListItem {
                      child: $CarteroRequestHeaderRow {
                        header-name: bind template.item as <$CarteroHeader>.header-name;
                        header-value: bind template.item as <$CarteroHeader>.header-value;
                        active: bind template.item as <$CarteroHeader>.active;
                      };
                    }
                  };
                }
              };
            }

            NotebookPage {
              tab: Label {
                label: _("Body");
              };

              child: ScrolledWindow {
                hexpand: true;
                vexpand: true;

                GtkSource.View request_body {
                  auto-indent: true;
                  indent-width: 2;
                  show-line-numbers: true;
                  smart-backspace: true;
                  top-margin: 10;
                  bottom-margin: 10;
                  left-margin: 10;
                  right-margin: 10;
                  monospace: true;

                  buffer: GtkSource.Buffer {
                    text: '{"hello": "world"}';
                  };
                }
              };
            }
          }
        }
      }

      FlowBoxChild {
        focusable: false;

        Box {
          width-request: 480;
          height-request: 200;

          $CarteroResponsePanel response {}
        }
      }
    }
  }
}
